datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  username  String
  email     String   @unique
  password  String
  role      Role     @default(PROJECT_MEMBER)
  isVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OTP {
  id        String   @id @default(uuid())
  email     String   @unique
  otp       String
  role      Role
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  PROJECT_MANAGER
  PROJECT_MEMBER
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // User can manage multiple projects
  managedProjects Project[] @relation("ProjectManager")
  
  @@map("users")
}

model Project {
  id          String      @id @default(cuid())
  name        String
  tags        String[]
  deadline    DateTime
  priority    Priority    @default(MEDIUM)
  image       String
  description String      @db.Text
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  projectManagerId String?   // <-- make it optional
  projectManager   User?     @relation("ProjectManager", fields: [projectManagerId], references: [id], onDelete: Cascade)
  @@map("projects")
}


enum Priority {
  LOW
  MEDIUM
  HIGH
}